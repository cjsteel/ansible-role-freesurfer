---
# roles/ansible-role-freesurfer/tasks/main.yml

- name: "update apt cache"
  become: true
  apt:
    update_cache: yes
    cache_valid_time: 3600
  when: freesurfer_state == 'present'
  tags: [ 'packages' ]

## install requirements

- name: "install requirements for freesurfer"
  become: true
  apt:
    name: '{{ item }}'
    state: '{{ freesurfer_state }}'
  with_items:
    - libjpeg62
    #- libjpeg62-dev
  when: freesurfer_state == 'present'
  tags: [ 'packages', 'utilities' ]

## Download

# This takes 2 to 3 hours...
#
#- name: "Download latest stable version of freesurfer"
#  get_url:
#    url: 'ftp://surfer.nmr.mgh.harvard.edu/pub/dist/freesurfer/6.0.0/freesurfer-Linux-centos6_x86_64-stable-pub-v6.0.0.tar.gz'
#    dest: '{{ freesurfer_remote_resource_directory }}/freesurfer-Linux-centos6_x86_64-stable-pub-v6.0.0.tar.gz'
#    validate_certs: no
#  when: freesurfer_state == 'present'
#  tags: [ 'packages', 'freesurfer' ]

## Copy archive

- name: "copy over our gigantic archive that takes hours to download!"
  copy:
    src: '{{ freesurfer_local_resource_path }}'
    dest: '{{ freesurfer_remote_resource_path }}'
  when: freesurfer_state == 'present'

## unarchive

# DOES NOT WORK ???
#
#- name: "unarchive freesurfer to /usr/local/freesurfer"
#  become: true
#  unarchive:
#    src: '{{ freesurfer_remote_resource_directory }}/freesurfer-Linux-centos6_x86_64-stable-pub-v6.0.0.tar.gz'
#    dest: '/usr/local'
#    creates: '/usr/local/freesurfer'
#  when: freesurfer_state == 'present'

- name: create versioned freesurfer
  become: true
  command: "tar -C /usr/local -xzvf {{ freesurfer_archive }}"
  args:
    chdir: '{{ freesurfer_remote_resource_directory }}'
    creates: '/usr/local/freesurfer'
  when: freesurfer_state == 'present'


- name: "copy over files/license.txt"
  become: true  
  copy:
    src: 'files/license.txt'
    dest: '/usr/local/freesurfer/license.txt'
  when: freesurfer_state == 'present'

## Remove

- name: "remove /usr/local/freesurfer"
  become: true
  command: rm -R /usr/local/freesurfer
  when: freesurfer_state == 'absent' or freesurfer_state == 'purge'
  ignore_errors: yes

## Remove freesurfer installer

- name: "remove /usr/local/freesurfer"
  become: true
  command: "rm -R {{ freesurfer_remote_resource_path }}"
  when: freesurfer_state == 'purge'
  ignore_errors: yes

- name: "ensure we have an aliase to setup freesurfer"
  become: true
  blockinfile:
    dest  : '/etc/skel/.bash_aliases'
    marker: '## {mark} ANSIBLE MANAGED BLOCK for FREESURFER ALIAS srcfreesurfer'
    insertafter: 'EOF'
    content: |
      # add alias for freesurfer setup
      #
      alias srcfreesurfer="source $FREESURFER_HOME/SetUpFreeSurfer.sh"
    state: 'absent'
  when: freesurfer_state == 'purge'

- name: "add export FREESURFER_HOME=/usr/local/freesurfer to /etc/skel/.bashrc"
  become: true
  blockinfile:
    marker: '## {mark} ANSIBLE MANAGED BLOCK for FREESURFER_HOME export'
    dest: '/etc/skel/.bashrc'
    insertafter: 'EOF'
    block: |
      #
      # export FREESURFER_HOME=/usr/local/freesurfer
      if [ -d "/usr/local/freesurfer" ] ; then
          export FREESURFER_HOME=/usr/local/freesurfer
      fi
    state: 'absent'
  when: freesurfer_state == 'purge'


## Ensure for executable ~/bin/freesurfer-toolkit-config.sh
#
# done via dependancy in meta/main.yml

## Ensure for versioned executable ~/bin/freesurfer-toolkit-config.sh
#
# done via dependancy in meta/main.yml

 
